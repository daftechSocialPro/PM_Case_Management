// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PM_Case_Managemnt_API.Data;

#nullable disable

namespace PMCaseManagemntAPI.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.Applicant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApplicantType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerIdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Applicants", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.Appointement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsSmsSent")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Appointements", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.AppointemnetWithCalender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AppointementDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AppointemnetWithCalenders", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.Case", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AffairStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CaseTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("LetterNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LetterSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Representative")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<bool>("SMSStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("CaseTypeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Cases", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.CaseAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.ToTable("CaseAttachments", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.CaseHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AffairHistoryStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CaseTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ForwardedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ForwardedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FromEmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromStructureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsConfirmedBySeretery")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForwardedBySeretery")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSmsSent")
                        .HasColumnType("bit");

                    b.Property<int>("ReciverType")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RevertedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SecreteryConfirmationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SecreteryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SeenDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ToEmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ToStructureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("TransferedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CaseTypeId");

                    b.HasIndex("ForwardedById");

                    b.HasIndex("FromEmployeeId");

                    b.HasIndex("FromStructureId");

                    b.HasIndex("SecreteryId");

                    b.HasIndex("ToEmployeeId");

                    b.HasIndex("ToStructureId");

                    b.ToTable("CaseHistories", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.CaseHistoryAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CaseHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseHistoryId");

                    b.HasIndex("CaseId");

                    b.ToTable("CaseHistoryAttachments", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.CaseMessages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MessageBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessageFrom")
                        .HasColumnType("int");

                    b.Property<bool>("Messagestatus")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.ToTable("CaseMessages", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.CaseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CaseForm")
                        .HasColumnType("int");

                    b.Property<string>("CaseTypeTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Counter")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MeasurementUnit")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentCaseTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<float>("TotlaPayment")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ParentCaseTypeId");

                    b.ToTable("CaseTypes", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.FileSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CaseTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseTypeId");

                    b.ToTable("FileSettings", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.FilesInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileLookup")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FileSettingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<string>("filetype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FileSettingId");

                    b.ToTable("FilesInformations", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.BudgetYear", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProgramBudgetYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramBudgetYearId");

                    b.ToTable("BudgetYears", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.EmployeeStructures", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationalStructureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OrganizationalStructureId");

                    b.ToTable("EmployeesStructures", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.OrganizationBranch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsHeadOffice")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganizationProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationProfileId");

                    b.ToTable("OrganizationBranches", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.OrganizationProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationNameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationNameInLocalLanguage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<int>("SmsCode")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrganizationProfile", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.OrganizationalStructure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("OrganizationBranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentStructureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<string>("StructureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationBranchId");

                    b.HasIndex("ParentStructureId");

                    b.ToTable("OrganizationalStructures", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.ProgramBudgetYear", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FromYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<int>("ToYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProgramBudgetYears", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.StandardizedFormDocuments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("StandrizedFormId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StandrizedFormId");

                    b.ToTable("FormDocuments", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.StandrizedForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FormName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StandrizedForms", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.UnitOfMeasurment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UnitOfMeasurment", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ActivityParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityType")
                        .HasColumnType("int");

                    b.Property<float?>("ActualBudget")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ActualEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualStart")
                        .HasColumnType("datetime2");

                    b.Property<float>("ActualWorked")
                        .HasColumnType("real");

                    b.Property<float>("Begining")
                        .HasColumnType("real");

                    b.Property<Guid?>("CommiteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("FieldWork")
                        .HasColumnType("real");

                    b.Property<float>("Goal")
                        .HasColumnType("real");

                    b.Property<float>("OfficeWork")
                        .HasColumnType("real");

                    b.Property<Guid?>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("PlanedBudget")
                        .HasColumnType("real");

                    b.Property<bool>("PostToCase")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShouldEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShouldStat")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitOfMeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.Property<int?>("targetDivision")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Activities", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.ActivityParent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityParentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ActualBudget")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ActualEnd")
                        .HasColumnType("datetime2");

                    b.Property<float>("ActualWorked")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ActuallStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Goal")
                        .HasColumnType("real");

                    b.Property<bool>("HasActivity")
                        .HasColumnType("bit");

                    b.Property<float>("PlanedBudget")
                        .HasColumnType("real");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShouldEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ShouldStartPeriod")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("ActivityParents", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.ActivityProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("ActualBudget")
                        .HasColumnType("real");

                    b.Property<float>("ActualWorked")
                        .HasColumnType("real");

                    b.Property<string>("CoordinatorApprovalRemark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DirectorApprovalRemark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FinanceApprovalRemark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinanceDocumentPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<int>("isApprovedByCoordinator")
                        .HasColumnType("int");

                    b.Property<int>("isApprovedByDirector")
                        .HasColumnType("int");

                    b.Property<int>("isApprovedByFinance")
                        .HasColumnType("int");

                    b.Property<int>("progressStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("quarterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ActivityProgresses", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.ActivityTargetDivision", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<float>("Target")
                        .HasColumnType("real");

                    b.Property<float>("TargetBudget")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("ActivityTargetDivisions", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.ActivityTerminationHistories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApprovedByDirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FromEmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<string>("TerminationReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ToCommiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ToEmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isRejected")
                        .HasColumnType("bit");

                    b.Property<bool>("isapproved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedByDirectorId");

                    b.ToTable("ActivityTerminationHistories", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.Commitees", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommiteeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Commitees", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.CommitesEmployees", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CommiteeEmployeeStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CommiteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommiteeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CommiteEmployees", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.EmployeesAssignedForActivities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeesAssignedForActivities", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BudgetYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FinanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasTask")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PeriodEndAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodStartAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PlanWeight")
                        .HasColumnType("real");

                    b.Property<float>("PlandBudget")
                        .HasColumnType("real");

                    b.Property<Guid?>("ProgramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProjectType")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("StructureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BudgetYearId");

                    b.HasIndex("FinanceId");

                    b.HasIndex("ProgramId");

                    b.HasIndex("ProjectManagerId");

                    b.HasIndex("StructureId");

                    b.ToTable("Plans", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.Programs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProgramBudgetYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ProgramPlannedBudget")
                        .HasColumnType("real");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramBudgetYearId");

                    b.ToTable("Programs", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.ProgressAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityProgressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityProgressId");

                    b.ToTable("ProgressAttachments", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("ActualBudget")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ActualEnd")
                        .HasColumnType("datetime2");

                    b.Property<float>("ActualWorked")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ActuallStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Goal")
                        .HasColumnType("real");

                    b.Property<bool>("HasActivityParent")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("PlanedBudget")
                        .HasColumnType("real");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShouldEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ShouldStartPeriod")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("Tasks", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.TaskMembers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivityParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityParentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PlanId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskMembers", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.TaskMemo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivityParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TaskMemos", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.TaskMemoReply", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("TaskMemoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TaskMemoReplies", (string)null);
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.Appointement", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.CaseModel.Case", "Case")
                        .WithMany()
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.AppointemnetWithCalender", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.CaseModel.Case", "Case")
                        .WithMany()
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.Case", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.CaseModel.Applicant", "Applicant")
                        .WithMany()
                        .HasForeignKey("ApplicantId");

                    b.HasOne("PM_Case_Managemnt_API.Models.CaseModel.CaseType", "CaseType")
                        .WithMany()
                        .HasForeignKey("CaseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Applicant");

                    b.Navigation("CaseType");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.CaseAttachment", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.CaseModel.Case", "Case")
                        .WithMany()
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.CaseHistory", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.CaseModel.Case", "Case")
                        .WithMany("CaseHistories")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_Case_Managemnt_API.Models.CaseModel.CaseType", "CaseType")
                        .WithMany()
                        .HasForeignKey("CaseTypeId");

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "ForwardedBy")
                        .WithMany()
                        .HasForeignKey("ForwardedById");

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "FromEmployee")
                        .WithMany()
                        .HasForeignKey("FromEmployeeId");

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.OrganizationalStructure", "FromStructure")
                        .WithMany()
                        .HasForeignKey("FromStructureId");

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "Secretery")
                        .WithMany()
                        .HasForeignKey("SecreteryId");

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "ToEmployee")
                        .WithMany()
                        .HasForeignKey("ToEmployeeId");

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.OrganizationalStructure", "ToStructure")
                        .WithMany()
                        .HasForeignKey("ToStructureId");

                    b.Navigation("Case");

                    b.Navigation("CaseType");

                    b.Navigation("ForwardedBy");

                    b.Navigation("FromEmployee");

                    b.Navigation("FromStructure");

                    b.Navigation("Secretery");

                    b.Navigation("ToEmployee");

                    b.Navigation("ToStructure");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.CaseHistoryAttachment", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.CaseModel.CaseHistory", "CaseHistory")
                        .WithMany("Attachments")
                        .HasForeignKey("CaseHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_Case_Managemnt_API.Models.CaseModel.Case", null)
                        .WithMany("CaseAttachments")
                        .HasForeignKey("CaseId");

                    b.Navigation("CaseHistory");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.CaseMessages", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.CaseModel.Case", "Case")
                        .WithMany()
                        .HasForeignKey("CaseId");

                    b.Navigation("Case");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.CaseType", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.CaseModel.CaseType", "ParentCaseType")
                        .WithMany("Childrens")
                        .HasForeignKey("ParentCaseTypeId");

                    b.Navigation("ParentCaseType");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.FileSetting", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.CaseModel.CaseType", "CaseType")
                        .WithMany()
                        .HasForeignKey("CaseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseType");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.FilesInformation", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.CaseModel.FileSetting", "FileSetting")
                        .WithMany()
                        .HasForeignKey("FileSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileSetting");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.BudgetYear", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.Common.ProgramBudgetYear", null)
                        .WithMany("BudgetYears")
                        .HasForeignKey("ProgramBudgetYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.EmployeeStructures", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.OrganizationalStructure", "OrganizationalStructure")
                        .WithMany()
                        .HasForeignKey("OrganizationalStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("OrganizationalStructure");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.OrganizationBranch", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.Common.OrganizationProfile", "OrganizationProfile")
                        .WithMany()
                        .HasForeignKey("OrganizationProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizationProfile");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.OrganizationalStructure", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.Common.OrganizationBranch", "OrganizationBranch")
                        .WithMany("structures")
                        .HasForeignKey("OrganizationBranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.OrganizationalStructure", "ParentStructure")
                        .WithMany()
                        .HasForeignKey("ParentStructureId");

                    b.Navigation("OrganizationBranch");

                    b.Navigation("ParentStructure");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.StandardizedFormDocuments", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.Common.StandrizedForm", null)
                        .WithMany("StandardizedFormDocuments")
                        .HasForeignKey("StandrizedFormId");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.ActivityTerminationHistories", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "ApprovedByDirector")
                        .WithMany()
                        .HasForeignKey("ApprovedByDirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedByDirector");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.CommitesEmployees", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.PM.Commitees", "Commitee")
                        .WithMany("employee")
                        .HasForeignKey("CommiteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commitee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.EmployeesAssignedForActivities", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.PM.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.Plan", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.Common.BudgetYear", "BudgetYear")
                        .WithMany()
                        .HasForeignKey("BudgetYearId");

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "Finance")
                        .WithMany()
                        .HasForeignKey("FinanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_Case_Managemnt_API.Models.PM.Programs", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId");

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.OrganizationalStructure", "Structure")
                        .WithMany()
                        .HasForeignKey("StructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BudgetYear");

                    b.Navigation("Finance");

                    b.Navigation("Program");

                    b.Navigation("ProjectManager");

                    b.Navigation("Structure");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.Programs", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.Common.ProgramBudgetYear", "ProgramBudgetYear")
                        .WithMany()
                        .HasForeignKey("ProgramBudgetYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramBudgetYear");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.ProgressAttachment", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.PM.ActivityProgress", "ActivityProgress")
                        .WithMany()
                        .HasForeignKey("ActivityProgressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityProgress");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.Task", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.PM.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.TaskMembers", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.PM.ActivityParent", "ActivityParent")
                        .WithMany()
                        .HasForeignKey("ActivityParentId");

                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_Case_Managemnt_API.Models.PM.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId");

                    b.HasOne("PM_Case_Managemnt_API.Models.PM.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId");

                    b.Navigation("ActivityParent");

                    b.Navigation("Employee");

                    b.Navigation("Plan");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.TaskMemo", b =>
                {
                    b.HasOne("PM_Case_Managemnt_API.Models.Common.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.Case", b =>
                {
                    b.Navigation("CaseAttachments");

                    b.Navigation("CaseHistories");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.CaseHistory", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.CaseModel.CaseType", b =>
                {
                    b.Navigation("Childrens");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.OrganizationBranch", b =>
                {
                    b.Navigation("structures");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.ProgramBudgetYear", b =>
                {
                    b.Navigation("BudgetYears");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.Common.StandrizedForm", b =>
                {
                    b.Navigation("StandardizedFormDocuments");
                });

            modelBuilder.Entity("PM_Case_Managemnt_API.Models.PM.Commitees", b =>
                {
                    b.Navigation("employee");
                });
#pragma warning restore 612, 618
        }
    }
}
